{"ast":null,"code":"var _jsxFileName = \"/Users/philippaolomoro/Documents/projects/interview-test/factorial/client/src/components/Contacts.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, Paper, List, ListItem, ListItemText, Divider, Button } from \"@mui/material\";\nimport { withStyles } from \"@mui/styles\";\nimport PropTypes from \"prop-types\";\nimport { Fragment, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport ContactForm from \"./ContactForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  paper: {\n    margin: \"24px\",\n    padding: \"16px\"\n  }\n};\n\nconst Contacts = _ref => {\n  _s();\n\n  let {\n    classes\n  } = _ref;\n  const contact = useQuery(\"/contacts\");\n  const {\n    isFetching,\n    isFetched,\n    error,\n    data\n  } = contact;\n  const [editingId, setEditingId] = useState(null);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 5,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(ContactForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 7,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"List of contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), isFetching && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 27\n        }, this), isFetched && error && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: (data === null || data === void 0 ? void 0 : data.message) || \"Error occured\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 35\n        }, this), isFetched && (data === null || data === void 0 ? void 0 : data.contacts) && /*#__PURE__*/_jsxDEV(List, {\n          children: data === null || data === void 0 ? void 0 : data.contacts.map(_ref2 => {\n            let {\n              _id,\n              firstName,\n              phoneNumber,\n              lastName\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  children: [firstName, \" \", lastName, \" - \", phoneNumber]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    size: \"large\",\n                    type: \"submit\",\n                    onClick: () => {\n                      setE;\n                    },\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    type: \"submit\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                component: \"li\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this)]\n            }, _id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contacts, \"FE9YkFa0ulHUklu8YA543WxcDes=\", false, function () {\n  return [useQuery];\n});\n\n_c = Contacts;\nContacts.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Contacts);\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/Users/philippaolomoro/Documents/projects/interview-test/factorial/client/src/components/Contacts.js"],"names":["Grid","Paper","List","ListItem","ListItemText","Divider","Button","withStyles","PropTypes","Fragment","useState","useQuery","ContactForm","styles","paper","margin","padding","Contacts","classes","contact","isFetching","isFetched","error","data","editingId","setEditingId","message","contacts","map","_id","firstName","phoneNumber","lastName","setE","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import { Grid, Paper, List, ListItem, ListItemText, Divider, Button } from \"@mui/material\";\nimport { withStyles } from \"@mui/styles\";\nimport PropTypes from \"prop-types\";\nimport { Fragment, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport ContactForm from \"./ContactForm\";\n\n\nconst styles ={\n  paper: {\n    margin: \"24px\",\n    padding: \"16px\" \n  }\n}\n\nconst Contacts = ({ classes }) => {\n  const contact = useQuery(\"/contacts\");\n  const { isFetching, isFetched, error, data } = contact;\n  const [editingId, setEditingId] = useState(null);\n\n  return (\n    <Grid container>\n      <Grid item xs={5}>\n        <Paper className={classes.paper}>\n          <ContactForm />\n        </Paper>\n      </Grid>\n      <Grid item xs={7}>\n        <Paper className={classes.paper}>\n          <div>List of contacts</div>\n\n          { isFetching && <h1>Loading...</h1> }\n\n          { isFetched && error && <h1>{data?.message || \"Error occured\" }</h1> }\n\n          { isFetched && data?.contacts && (\n            <List>\n              {data?.contacts.map(({ _id, firstName, phoneNumber, lastName }) => (\n                <Fragment key={_id}>\n                  <ListItem>\n                    <ListItemText>\n                      {firstName} {lastName} - {phoneNumber}\n                    </ListItemText>\n                    <form>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        type=\"submit\"\n                        onClick={() => {\n                          setE\n                        }}\n                      >Edit</Button>\n                      <Button\n                        variant=\"contained\"\n                        type=\"submit\"\n                      >Delete</Button>\n                    </form>\n                  </ListItem>\n                  <Divider component=\"li\" />\n                </Fragment>\n              ))}\n            </List>\n          )}\n\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nContacts.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\n\nexport default withStyles(styles)(Contacts);\n"]},"metadata":{},"sourceType":"module"}