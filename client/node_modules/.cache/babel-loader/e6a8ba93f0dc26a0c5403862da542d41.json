{"ast":null,"code":"var _jsxFileName = \"/Users/philippaolomoro/Documents/projects/interview-test/factorial/client/src/components/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport { Button, TextField } from \"@mui/material\";\nimport { withStyles } from \"@mui/styles\";\nimport PropTypes from \"prop-types\";\nimport React, { useCallback, useMemo } from \"react\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  root: {\n    '& .MuiTextField-root': {\n      margin: \"8px\"\n    }\n  },\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  },\n  submitButton: {\n    width: \"50%\"\n  }\n};\n\nconst ContactForm = _ref => {\n  _s();\n\n  let {\n    classes,\n    contactId,\n    setContactId\n  } = _ref;\n  const mutation = use;\n  const {\n    data\n  } = useQuery(`/contacts/${contactId}`, {\n    enabled: Boolean(contactId)\n  });\n\n  const handleCreateContact = (values, actions) => {\n    console.log(values);\n    actions.setSubmitting(false);\n  };\n\n  const handleUpdateContact = useCallback((values, actions) => {\n    console.log(\"Update contact\", contactId, values);\n  }, [contactId]);\n  const initialValues = useMemo(() => {\n    return [\"firstName\", \"lastName\", \"email\", \"phoneNumber\"].reduce((values, key) => {\n      var _data$contact$key, _data$contact;\n\n      return { ...values,\n        [key]: (_data$contact$key = data === null || data === void 0 ? void 0 : (_data$contact = data.contact) === null || _data$contact === void 0 ? void 0 : _data$contact[key]) !== null && _data$contact$key !== void 0 ? _data$contact$key : \"\"\n      };\n    }, {});\n  }, [data === null || data === void 0 ? void 0 : data.contact]);\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    enableReinitialize: true,\n    onSubmit: !Boolean(data === null || data === void 0 ? void 0 : data.contact) ? handleCreateContact : handleUpdateContact,\n    initialValues: initialValues,\n    validationSchema: Yup.object({\n      firstName: Yup.string().required(),\n      lastName: Yup.string().required(),\n      email: Yup.string().email().required(),\n      phoneNumber: Yup.string().min(10).max(16).required()\n    }),\n    children: _ref2 => {\n      let {\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        handleReset,\n        values\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        className: `${classes.root} ${classes.form}`,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"firstName\",\n          variant: \"outlined\",\n          label: \"First Name\",\n          fullWidth: true,\n          value: values.firstName,\n          onChange: handleChange,\n          onBlur: handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"firstName\",\n          component: \"p\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"lastName\",\n          variant: \"outlined\",\n          label: \"Last Name\",\n          fullWidth: true,\n          value: values.lastName,\n          onChange: handleChange,\n          onBlur: handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"lastName\",\n          component: \"p\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"email\",\n          variant: \"outlined\",\n          label: \"Email\",\n          fullWidth: true,\n          value: values.email,\n          onChange: handleChange,\n          onBlur: handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"p\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"phoneNumber\",\n          variant: \"outlined\",\n          label: \"Phone Number\",\n          fullWidth: true,\n          value: values.phoneNumber,\n          onChange: handleChange,\n          onBlur: handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"phoneNumber\",\n          component: \"p\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          type: \"submit\",\n          className: classes.submitButton,\n          children: !Boolean(data === null || data === void 0 ? void 0 : data.contact) ? \"Create\" : \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), Boolean(data === null || data === void 0 ? void 0 : data.contact) && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          type: \"reset\",\n          onClick: () => {\n            handleReset();\n            setContactId(null);\n          },\n          className: classes.submitButton,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"WtY2k1MWO41hjyoaVC7s80wwpUg=\", false, function () {\n  return [useQuery];\n});\n\n_c = ContactForm;\nContactForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ContactForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/philippaolomoro/Documents/projects/interview-test/factorial/client/src/components/ContactForm.js"],"names":["Button","TextField","withStyles","PropTypes","React","useCallback","useMemo","Formik","ErrorMessage","Yup","useQuery","styles","root","margin","form","display","flexWrap","justifyContent","submitButton","width","ContactForm","classes","contactId","setContactId","mutation","use","data","enabled","Boolean","handleCreateContact","values","actions","console","log","setSubmitting","handleUpdateContact","initialValues","reduce","key","contact","object","firstName","string","required","lastName","email","phoneNumber","min","max","handleSubmit","handleChange","handleBlur","handleReset","propTypes","isRequired"],"mappings":"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","sourcesContent":["import { Button, TextField } from \"@mui/material\";\nimport { withStyles } from \"@mui/styles\";\nimport PropTypes from \"prop-types\";\nimport React, { useCallback, useMemo } from \"react\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useQuery } from \"react-query\";\n\nconst styles ={\n  root: {\n    '& .MuiTextField-root': { margin: \"8px\", },\n  },\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  },\n  submitButton: {\n    width: \"50%\"\n  }\n}\n\nconst ContactForm = ({ classes, contactId, setContactId }) => {\n  const mutation = use\n  const { data } = useQuery(`/contacts/${contactId}`, {\n    enabled: Boolean(contactId),\n  });\n\n  const handleCreateContact = (values, actions) => {\n    console.log(values);\n    actions.setSubmitting(false);\n  };\n\n  const handleUpdateContact = useCallback((values, actions) => {\n    console.log(\"Update contact\", contactId, values)\n  }, [contactId])\n\n  const initialValues = useMemo(() => {\n    return [\n      \"firstName\",\n      \"lastName\",\n      \"email\",\n      \"phoneNumber\",\n    ].reduce((values, key) => ({\n      ...values,\n      [key]: data?.contact?.[key] ?? \"\",\n    }), {})\n  }, [data?.contact]);\n\n  return (\n    <Formik\n      enableReinitialize\n      onSubmit={\n        !Boolean(data?.contact)\n          ? handleCreateContact\n          : handleUpdateContact\n      }\n      initialValues={initialValues}\n      validationSchema={Yup.object({\n        firstName: Yup.string().required(),\n        lastName: Yup.string().required(),\n        email: Yup.string().email().required(),\n        phoneNumber: Yup.string().min(10).max(16).required(),\n      })}\n    >\n      {({ handleSubmit, handleChange, handleBlur, handleReset, values }) => (\n        <form className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit} >\n          <TextField\n            name=\"firstName\"\n            variant=\"outlined\"\n            label=\"First Name\"\n            fullWidth\n            value={values.firstName}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          <ErrorMessage name=\"firstName\" component=\"p\" />\n\n          <TextField\n            name=\"lastName\"\n            variant=\"outlined\"\n            label=\"Last Name\"\n            fullWidth\n            value={values.lastName}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          <ErrorMessage name=\"lastName\" component=\"p\" />\n\n          <TextField\n            name=\"email\"\n            variant=\"outlined\"\n            label=\"Email\"\n            fullWidth\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          <ErrorMessage name=\"email\" component=\"p\" />\n\n          <TextField\n            name=\"phoneNumber\"\n            variant=\"outlined\"\n            label=\"Phone Number\"\n            fullWidth\n            value={values.phoneNumber}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          <ErrorMessage name=\"phoneNumber\" component=\"p\" />\n          \n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            className={classes.submitButton}\n          >\n            {!Boolean(data?.contact) ? \"Create\" : \"Update\" }\n          </Button>\n          {\n          Boolean(data?.contact) && (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              type=\"reset\"\n              onClick={() => {\n                handleReset();\n                setContactId(null);\n              }}\n              className={classes.submitButton}\n            >\n              Reset\n            </Button>\n          )}\n          \n        </form>\n      )}\n    </Formik>\n  );\n}\n\nContactForm.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(ContactForm);\n"]},"metadata":{},"sourceType":"module"}