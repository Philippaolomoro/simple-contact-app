{"ast":null,"code":"var _jsxFileName = \"/Users/philippaolomoro/Documents/projects/interview-test/factorial/client/src/components/Contacts.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, Paper } from \"@mui/material\";\nimport { withStyles } from \"@mui/styles\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\"; // import { connect } from \"react-redux\";\n// import * as actions from \"../actions/contacts\";\n\nimport ContactForm from \"./ContactForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  paper: {\n    margin: \"24px\",\n    padding: \"16px\"\n  }\n};\n\nconst Contacts = _ref => {\n  _s();\n\n  let {\n    classes\n  } = _ref;\n  const {\n    isFetching,\n    error,\n    data: {\n      contacts,\n      message\n    }\n  } = useQuery(\"/contacts\");\n  console.log(contacts);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 5,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(ContactForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 7,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"List of contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), isFetching && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Fetching....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 26\n        }, this), isFetching && ERROR && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: message || \"Error occured\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 35\n        }, this), !isFetching && contacts && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: contacts.map(_ref2 => {\n            let {\n              firstName,\n              phoneNumber\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [firstName, \" - \", phoneNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contacts, \"+Y7r9aPKIQ+1LoKABnAEcQRLRHo=\", false, function () {\n  return [useQuery];\n});\n\n_c = Contacts;\nContacts.propTypes = {\n  classes: PropTypes.object.isRequired\n}; // const mapStateToProps = state => ({\n//   contactList : state.contacts.list\n// })\n// const mapActionToProps = {\n//   fetchAllContacts : actions.fetchAll\n// }\n\nexport default withStyles(styles)(Contacts);\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/Users/philippaolomoro/Documents/projects/interview-test/factorial/client/src/components/Contacts.js"],"names":["Grid","Paper","withStyles","PropTypes","React","useEffect","useState","useQuery","ContactForm","styles","paper","margin","padding","Contacts","classes","isFetching","error","data","contacts","message","console","log","ERROR","map","firstName","phoneNumber","propTypes","object","isRequired"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,KAAf,QAA4B,eAA5B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;AACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,MAAMC,MAAM,GAAE;AACZC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,MADH;AAELC,IAAAA,OAAO,EAAE;AAFJ;AADK,CAAd;;AAOA,MAAMC,QAAQ,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAChC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ;AAA3B,MAAoDZ,QAAQ,CAAC,WAAD,CAAlE;AAEAa,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEJ,OAAO,CAACJ,KAA1B;AAAA,+BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEI,OAAO,CAACJ,KAA1B;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGK,UAAU,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFjB,EAGGA,UAAU,IAAIO,KAAd,iBAAuB;AAAA,oBAAKH,OAAO,IAAI;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAH1B,EAIG,CAACJ,UAAD,IAAeG,QAAf,iBACC;AAAA,oBACGA,QAAQ,CAACK,GAAT,CAAa;AAAA,gBAAC;AAAEC,cAAAA,SAAF;AAAaC,cAAAA;AAAb,aAAD;AAAA,gCACZ;AAAA,yBAAKD,SAAL,SAAmBC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADY;AAAA,WAAb;AADH;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA5BD;;GAAMZ,Q;UACsDN,Q;;;KADtDM,Q;AA8BNA,QAAQ,CAACa,SAAT,GAAqB;AACnBZ,EAAAA,OAAO,EAAEX,SAAS,CAACwB,MAAV,CAAiBC;AADP,CAArB,C,CAIA;AACA;AACA;AAEA;AACA;AACA;;AAEA,eAAe1B,UAAU,CAACO,MAAD,CAAV,CAAmBI,QAAnB,CAAf","sourcesContent":["import { Grid, Paper } from \"@mui/material\";\nimport { withStyles } from \"@mui/styles\";\nimport PropTypes from \"prop-types\";\nimport React, {useEffect, useState} from \"react\";\nimport { useQuery } from \"react-query\";\n// import { connect } from \"react-redux\";\n// import * as actions from \"../actions/contacts\";\nimport ContactForm from \"./ContactForm\";\n\n\nconst styles ={\n  paper: {\n    margin: \"24px\",\n    padding: \"16px\" \n  }\n}\n\nconst Contacts = ({ classes }) => {\n  const { isFetching, error, data: { contacts, message }} = useQuery(\"/contacts\");\n\n  console.log(contacts);\n\n  return (\n    <Grid container>\n      <Grid item xs={5}>\n        <Paper className={classes.paper}>\n          <ContactForm />\n        </Paper>\n      </Grid>\n      <Grid item xs={7}>\n        <Paper className={classes.paper}>\n          <div>List of contacts</div>\n          {isFetching && <h1>Fetching....</h1>}\n          {isFetching && ERROR && <h1>{message || \"Error occured\"}</h1>}\n          {!isFetching && contacts && (\n            <ul>\n              {contacts.map(({ firstName, phoneNumber }) => (\n                <li>{firstName} - {phoneNumber}</li>\n              ))}\n            </ul>\n          )}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nContacts.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\n// const mapStateToProps = state => ({\n//   contactList : state.contacts.list\n// })\n\n// const mapActionToProps = {\n//   fetchAllContacts : actions.fetchAll\n// }\n\nexport default withStyles(styles)(Contacts);\n"]},"metadata":{},"sourceType":"module"}