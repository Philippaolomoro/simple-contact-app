{"ast":null,"code":"var _jsxFileName = \"/Users/philippaolomoro/Documents/projects/interview-test/factorial/client/src/components/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport { Button, TextField } from \"@mui/material\";\nimport { withStyles } from \"@mui/styles\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  root: {\n    '& .MuiTextField-root': {\n      margin: \"8px\"\n    }\n  },\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  },\n  submitButton: {\n    width: \"50%\"\n  }\n};\n\nconst ContactForm = _ref => {\n  _s();\n\n  let {\n    classes,\n    contactId\n  } = _ref;\n  const contact = useQuery(`/contacts/${contactId}`, {\n    enabled: !!contactId\n  });\n\n  const handleSubmit = (values, actions) => {\n    console.log(values);\n    actions.setSubmitting(false);\n  };\n\n  const initialValues = useMemo(() => [\"firstName\", \"lastName\", \"email\", \"phoneNumber\"].reduce((values, key) => ({ ...values,\n    [key]: contact.data.contact[key] || \"\"\n  }), {}), [contact.datd]);\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phoneNumber: \"\"\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string().required(),\n      lastName: Yup.string().required(),\n      email: Yup.string().email().required(),\n      phoneNumber: Yup.string().min(10).max(16).required()\n    }),\n    onSubmit: handleSubmit,\n    children: _ref2 => {\n      let {\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        className: `${classes.root} ${classes.form}`,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"firstName\",\n          variant: \"outlined\",\n          label: \"First Name\",\n          fullWidth: true,\n          value: values.firstName,\n          onChange: handleChange,\n          onBlur: handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"firstName\",\n          component: \"p\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"lastName\",\n          variant: \"outlined\",\n          label: \"Last Name\",\n          fullWidth: true,\n          value: values.lastName,\n          onChange: handleChange,\n          onBlur: handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"lastName\",\n          component: \"p\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"email\",\n          variant: \"outlined\",\n          label: \"Email\",\n          fullWidth: true,\n          value: values.email,\n          onChange: handleChange,\n          onBlur: handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"p\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"phoneNumber\",\n          variant: \"outlined\",\n          label: \"Phone Number\",\n          fullWidth: true,\n          value: values.phoneNumber,\n          onChange: handleChange,\n          onBlur: handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"phoneNumber\",\n          component: \"p\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          type: \"submit\",\n          className: classes.submitButton,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"evLhnfSsqV2jlEkBc8UAyHs+lqQ=\", false, function () {\n  return [useQuery];\n});\n\n_c = ContactForm;\nContactForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ContactForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/philippaolomoro/Documents/projects/interview-test/factorial/client/src/components/ContactForm.js"],"names":["Button","TextField","withStyles","PropTypes","React","Formik","ErrorMessage","Yup","useQuery","styles","root","margin","form","display","flexWrap","justifyContent","submitButton","width","ContactForm","classes","contactId","contact","enabled","handleSubmit","values","actions","console","log","setSubmitting","initialValues","useMemo","reduce","key","data","datd","firstName","lastName","email","phoneNumber","object","string","required","min","max","handleChange","handleBlur","propTypes","isRequired"],"mappings":"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","sourcesContent":["import { Button, TextField } from \"@mui/material\";\nimport { withStyles } from \"@mui/styles\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useQuery } from \"react-query\";\n\nconst styles ={\n  root: {\n    '& .MuiTextField-root': { margin: \"8px\", },\n  },\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  },\n  submitButton: {\n    width: \"50%\"\n  }\n}\n\nconst ContactForm = ({ classes, contactId }) => {\n  const contact = useQuery(`/contacts/${contactId}`, {\n    enabled: !!contactId,\n  });\n\n  const handleSubmit = (values, actions) => {\n    console.log(values);\n    actions.setSubmitting(false);\n  }\n\n  const initialValues = useMemo(() => [\n    \"firstName\",\n    \"lastName\",\n    \"email\",\n    \"phoneNumber\",\n  ].reduce((values, key) => ({\n    ...values,\n    [key]: contact.data.contact[key] || \"\",\n  }), {}), [contact.datd]);\n\n\n  return (\n    <Formik\n      initialValues={{\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n      }}\n      validationSchema={Yup.object({\n        firstName: Yup.string().required(),\n        lastName: Yup.string().required(),\n        email: Yup.string().email().required(),\n        phoneNumber: Yup.string().min(10).max(16).required(),\n      })}\n      onSubmit={handleSubmit}\n    >\n      {({ handleSubmit, handleChange, handleBlur, values }) => (\n        <form className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit} >\n          <TextField\n            name=\"firstName\"\n            variant=\"outlined\"\n            label=\"First Name\"\n            fullWidth\n            value={values.firstName}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          <ErrorMessage name=\"firstName\" component=\"p\" />\n\n          <TextField\n            name=\"lastName\"\n            variant=\"outlined\"\n            label=\"Last Name\"\n            fullWidth\n            value={values.lastName}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          <ErrorMessage name=\"lastName\" component=\"p\" />\n\n          <TextField\n            name=\"email\"\n            variant=\"outlined\"\n            label=\"Email\"\n            fullWidth\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          <ErrorMessage name=\"email\" component=\"p\" />\n\n          <TextField\n            name=\"phoneNumber\"\n            variant=\"outlined\"\n            label=\"Phone Number\"\n            fullWidth\n            value={values.phoneNumber}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          <ErrorMessage name=\"phoneNumber\" component=\"p\" />\n          \n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            className={classes.submitButton}\n          >Submit</Button>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nContactForm.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(ContactForm);\n"]},"metadata":{},"sourceType":"module"}