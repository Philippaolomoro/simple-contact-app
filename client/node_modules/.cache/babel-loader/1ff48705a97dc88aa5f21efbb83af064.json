{"ast":null,"code":"var _jsxFileName = \"/Users/philippaolomoro/Documents/projects/interview-test/factorial/client/src/components/Contacts.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, Paper, List, ListItem, ListItemText, Divider, Button, Modal } from \"@mui/material\";\nimport { withStyles } from \"@mui/styles\";\nimport PropTypes from \"prop-types\";\nimport { Fragment } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useStore } from \"../store\";\nimport DeleteModal from \"./DeleteModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  paper: {\n    margin: \"24px\",\n    padding: \"16px\"\n  }\n};\n\nconst Contacts = _ref => {\n  _s();\n\n  let {\n    classes\n  } = _ref;\n  const contact = useQuery(\"/contacts\");\n  const store = useStore();\n  const {\n    isFetching,\n    isFetched,\n    error,\n    data\n  } = contact;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"List of contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), isFetching && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }, this), isFetched && error && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: (data === null || data === void 0 ? void 0 : data.message) || \"Error occured\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 31\n    }, this), isFetched && (data === null || data === void 0 ? void 0 : data.contacts) && /*#__PURE__*/_jsxDEV(List, {\n      children: data === null || data === void 0 ? void 0 : data.contacts.map(_ref2 => {\n        let {\n          _id,\n          firstName,\n          phoneNumber,\n          lastName\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              children: [firstName, \" \", lastName, \" - \", phoneNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              size: \"large\",\n              type: \"submit\",\n              onClick: () => {\n                store.updateStore(\"contact\", {\n                  editingId: _id\n                });\n                store.updateStore(\"formModal\", {\n                  open: true\n                });\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DeleteModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            component: \"li\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, _id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contacts, \"SjdivKDGXOy1Rlv1AtVItoX18SM=\", false, function () {\n  return [useQuery, useStore];\n});\n\n_c = Contacts;\nContacts.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Contacts);\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/Users/philippaolomoro/Documents/projects/interview-test/factorial/client/src/components/Contacts.js"],"names":["Grid","Paper","List","ListItem","ListItemText","Divider","Button","Modal","withStyles","PropTypes","Fragment","useQuery","useStore","DeleteModal","styles","paper","margin","padding","Contacts","classes","contact","store","isFetching","isFetched","error","data","message","contacts","map","_id","firstName","phoneNumber","lastName","updateStore","editingId","open","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import { Grid, Paper, List, ListItem, ListItemText, Divider, Button, Modal } from \"@mui/material\";\nimport { withStyles } from \"@mui/styles\";\nimport PropTypes from \"prop-types\";\nimport { Fragment } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useStore } from \"../store\";\nimport DeleteModal from \"./DeleteModal\";\n\n\nconst styles ={\n  paper: {\n    margin: \"24px\",\n    padding: \"16px\" \n  }\n}\n\nconst Contacts = ({ classes }) => {\n  const contact = useQuery(\"/contacts\");\n  const store = useStore();\n  const { isFetching, isFetched, error, data } = contact;\n\n  return (\n    <Paper className={classes.paper}>\n      <div>List of contacts</div>\n\n      { isFetching && <h1>Loading...</h1> }\n\n      { isFetched && error && <h1>{data?.message || \"Error occured\" }</h1> }\n\n      { isFetched && data?.contacts && (\n        <List>\n          {data?.contacts.map(({ _id, firstName, phoneNumber, lastName }) => (\n            <Fragment key={_id}>\n              <ListItem>\n                <ListItemText>\n                  \n                  {firstName} {lastName} - {phoneNumber}\n                </ListItemText>\n\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  type=\"submit\"\n                  onClick={() => {\n                    store.updateStore(\"contact\", { editingId: _id });\n                    store.updateStore(\"formModal\", { open: true })\n                  }}\n                >\n                  Edit\n                </Button>             \n              </ListItem> \n              <DeleteModal/>             \n              <Divider component=\"li\" />\n              \n            </Fragment>\n          ))}\n        </List>\n      )}\n\n    </Paper>\n  );\n}\n\nContacts.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\n\nexport default withStyles(styles)(Contacts);\n"]},"metadata":{},"sourceType":"module"}